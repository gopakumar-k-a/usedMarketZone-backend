"use strict";
var __importDefault = (this && this.__importDefault) || function (mod) {
    return (mod && mod.__esModule) ? mod : { "default": mod };
};
Object.defineProperty(exports, "__esModule", { value: true });
const express_1 = __importDefault(require("express"));
const userDbRepository_1 = require("../../../application/repositories/userDbRepository");
const userRepositoryMongoDb_1 = require("../../database/mongodb/repositories/userRepositoryMongoDb");
const authService_1 = require("../../services/authService");
const authServiceInterface_1 = require("../../../application/services/authServiceInterface");
const userController_1 = __importDefault(require("../../../adapters/userController/userController"));
const kycDbRepository_1 = require("../../../application/repositories/kycDbRepository");
const kycRepositoryMongoDB_1 = require("../../database/mongodb/repositories/kycRepositoryMongoDB");
const productDbRepository_1 = require("../../../application/repositories/productDbRepository");
const productRepositoryMongoDb_1 = require("../../database/mongodb/repositories/productRepositoryMongoDb");
const notificationRepository_1 = require("../../../application/repositories/notificationRepository");
const notificationRepositoryMongoDB_1 = require("../../database/mongodb/repositories/notificationRepositoryMongoDB");
const userRouter = () => {
    const router = express_1.default.Router();
    const controller = (0, userController_1.default)(userDbRepository_1.userDbRepository, userRepositoryMongoDb_1.userRepositoryMongoDb, authServiceInterface_1.authServiceInterface, authService_1.authService, kycDbRepository_1.kycDbRepository, kycRepositoryMongoDB_1.kycRepositoryMongoDB, productDbRepository_1.productDbRepository, productRepositoryMongoDb_1.productRepositoryMongoDb, notificationRepository_1.notificationRepository, notificationRepositoryMongoDB_1.notificationRepositoryMongoDB);
    router.route("/profile/:userId").get(controller.handleGetUserProfile);
    router.put("/edit-profile/:userId", controller.handleProfileUpdate);
    router.put("/edit-profile/update-image/:userId", controller.handleProfileImageUpdate);
    router.put("/edit-profile/update-password/:userId", controller.handleUserPasswordUpdate);
    router.put("/edit-profile/remove-profile-pic/:userId", controller.handleProfilePicRemove);
    router.get("/username-check/:userName/:userId", controller.handleUserNameCheck);
    router.get("/suggested-users", controller.suggestedUsers);
    router.patch("/follow-user/:followUserId", controller.followUser);
    router.patch("/un-follow-user/:unFollowUserId", controller.unFollowUser);
    router.get("/num-of-follow/:userId", controller.getNumberOfFollowById);
    router.get("/followers", controller.getFollowers);
    router.get("/following", controller.getFollowing);
    router.post("/kyc-request", controller.addNewKycRequest);
    router.get("/search", controller.searchOnApp);
    router.get("/get-notifications", controller.getUserNotifications);
    router.patch("/change-notification-status", controller.changeNotificationReadStatus);
    router.get("/my-kyc", controller.getMyKycData);
    return router;
};
exports.default = userRouter;
